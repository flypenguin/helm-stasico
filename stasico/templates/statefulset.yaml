{{- if .Values.persistence.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end}}
metadata:
  name: {{ include "stasico.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "stasico.name" . }}
    helm.sh/chart: {{ include "stasico.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  # without shared storage, no more than 1 replica, also we can't start the next
  # before killing the old due to the volume attachment. I think.
  # anyway, safer this way.
  replicas: {{ .Values.persistence.enabled | ternary "1" .Values.deployment.replicas }}
{{- if .Values.persistence.enabled }}
  serviceName: {{ include "stasico.fullname" . }}
  updateStrategy:
    type: RollingUpdate
{{-  else }}
  strategy:
    type: RollingUpdate
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "stasico.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "stasico.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ default (include "stasico.name" . ) .Values.container.name }}
          image: "{{ required "Please define .Values.image.repository !" .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- if or .Values.container.env .Values.container.secretEnv .Values.container.envFrom .Values.container.secretEnvFrom }}
          envFrom:
{{- if .Values.container.env }}
            - configMapRef:
                name: {{ include "stasico.fullname" . }}-env
                optional: false
{{- end }}
{{- if .Values.container.envFrom }}
{{- range $refName := .Values.container.envFrom }}
            - configMapRef:
                name: {{ $refName }}
                optional: false
{{- end }}
{{- end }}
{{- if .Values.container.secretEnv }}
            - secretRef:
                name: {{ include "stasico.fullname" . }}-env-secrets
                optional: false
{{- end }}
{{- if .Values.container.secretEnvFrom }}
{{- range $refName := .Values.container.secretEnvFrom }}
            - secretRef:
                name: {{ $refName }}
                optional: false
{{- end }}
{{- end }}
{{- end }}
{{- if (and .Values.container .Values.container.ports) }}
          ports:
{{- range $name, $portInfo := .Values.container.ports }}
            - name: {{ $name }}
{{ toYaml $portInfo | indent 14 }}
{{- end }}
{{- end }}
{{- if .Values.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
{{- end }}
{{- if .Values.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
{{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}

{{- if .Values.persistence.enabled }}
{{- if or .Values.persistence.mounts .Values.persistence.simpleMounts }}
          volumeMounts:
            {{- if .Values.persistence.mounts }}
{{ toYaml .Values.persistence.mounts | indent 12 }}
            {{- end }}
            {{- if .Values.persistence.simpleMounts }}
            {{- range $name, $path := .Values.persistence.simpleMounts }}
            - name: {{ $name }}
              mountPath: {{ $path }}
            {{- end }}
            {{- end }}
{{- end }}
{{- if or .Values.persistence.volumes .Values.persistence.volumesFromExistingClaims }}
      volumes:
{{- if .Values.persistence.volumesFromExistingClaims }}
{{- range $volName, $value := .Values.persistence.volumesFromExistingClaims }}
        - name: {{ $volName }}
          persistentVolumeClaim:
            claimName: {{ $value }}
{{- end }}
{{- end }}
{{- if .Values.persistence.volumes }}
{{- range $volName, $volume := .Values.persistence.volumes }}
        - name: {{ $volName }}
{{ toYaml $volume | indent 10 }}
{{- end }}
{{- end }}
{{- end }}
{{- if and .Values.persistence.volumeClaimTemplates }}
{{- $Outer := . }}
  volumeClaimTemplates:
{{- range $name, $vctmpl := .Values.persistence.volumeClaimTemplates }}
    - metadata:
        name: {{ $name }}
        {{- with $vctmpl.annotations }}
        annotations:
          {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
          {{- end }}
        {{- end }}
        labels:
          app.kubernetes.io/name: {{ include "stasico.name" $Outer }}
          app.kubernetes.io/instance: {{ $Outer.Release.Name }}
          {{- with $vctmpl.labels }}
          {{- range $key, $value := . }}
          "app.kubernetes.io/{{ include "stasico.name" $Outer }}/{{ $key }}": {{ $value | quote }}
          {{- end}}
          {{- end}}
      spec:
        accessModes:
        {{- with $vctmpl.accessModes }}
        {{- range $accessMode := .}}
          - {{ . }}
        {{- end }}
        {{- else }}
          - ReadWriteOnce
        {{- end }}
        resources:
          requests:
            storage: {{ default "8Gi" $vctmpl.size | quote }}
        {{- if or $vctmpl.matchLabels $vctmpl.matchExpressions }}
        selector:
          {{- if $vctmpl.matchLabels }}
          matchLabels:
{{ toYaml $vctmpl.matchLabels | indent 12 }}
          {{- end }}
          {{- if $vctmpl.matchExpressions }}
          matchExpressions:
{{ toYaml $vctmpl.matchExpressions | indent 12 }}
          {{- end }}
        {{- end }}
        storageClassName: {{ default "" $vctmpl.storageClassName | quote }}
{{- end }}
{{- end }}
{{- end }}
